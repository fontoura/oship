# -*- coding: utf-8 -*-
##############################################################################
# Copyright (c) 2007, Timothy W. Cook and Contributors. All rights reserved.
# Redistribution and use are governed by the license in OSHIP-LICENSE.txt
#
# Use and/or redistribution of this file assumes you have read and accepted the
# terms of the license.
##############################################################################

"""

The basic openEHR data types interfaces. From the data types specification Rev 2.1.0

"""

__author__  = 'Timothy Cook <timothywayne.cook@gmail.com>'
__docformat__ = 'plaintext'

from zope.interface import Interface,implements
from zope.interface import invariant
from zope.schema.interfaces import IField
from zope.schema.interfaces import IBool
from zope.schema import Text,TextLine
from zope.schema import Bool 
from zope.i18nmessageid import MessageFactory


_ = MessageFactory('oship')

class IDataValue(IField):
    """
    Serves as a common ancestor of all data value types in openEHR models.
    """

    pass

    
class IDvBoolean(IBool):
    """
    Items which are truly boolean data, such as true/false or yes/no answers.
    The invariant defined in the spec for this class is that it is not void.  
    In Python a 'None' is defined as False.
    """
    
    value = Bool(
        title = _("value"),
        description = _("The boolean value of this item."),
        required = True,
        default = False
    )
        

class IDvState(IDataValue):
    """
    For representing state values which obey a defined state machine, such as a vari-
    able representing the states of an instruction or care process.
    
    DV_STATE is expressed as a String but its values are driven by archetype-
    defined state machines. This provides a powerful way of capturing stateful com-
    plex processes in simple data.
    """
    
    value = TextLine(
        title = _(u"value"),
        description = _(u"""The state name. State names are determined by a state/event 
                      table defined in archetypes, and coded using openEHR Terminology 
                      or local archetype terms, as specified by the archetype.
                      
                      A module was added to the rm.support package to parse the State 
                      values from the archetype in the current context. This function 
                      is DvStateParser() and it may be called anywhere in the application
                      that the developer needs to know the current available states.
                      It returns a DvCodedText type.
                      """),
        required = True,
        )
    
    isTerminal = Bool(
        title = _(u"isTerminal"),
        description= _(u"""Indicates whether this state is a terminal
                      state, such as “aborted”, “completed” etc
                      from which no further transitions are possible.
                      It is required and the default is False.
                      """),
        required = True,
        default = False
        )
    
    
class IDvIdentifier(IDataValue):
    """
    Type for representing identifiers of real-world entities. Typical identifiers include
    drivers licence number, social security number, vertans affairs number, prescrip-
    tion id, order id, and so on.
    
    DV_IDENTIFIER is used to represent any identifier of a real thing, issued by
    some authority or agency.

    DV_IDENTIFIER is not used to express identifiers generated by the infrastruc-
    ture to refer to information items; the types OBJECT_ID and OBJECT_REF and
    subtypes are defined for this purpose.
    """
    
    issuer = Text(
        title = _(u"Issuer"),
        description = _(u"""Authority which issues the kind of id used in the id field  
                      of this object."""),
        required = True,
        )
    
    assignor = Text(
        title = _(u"Assignor"),
        description = _(u"""Organisation that assigned the id to the item being identified."""),
        required = True
        )
    
    id = Text(
        title = _(u"Id"),
        description = _(u""" The identifier value. Often structured, according to the 
                      definition of the issuing authority’s rules."""),
        required = True
        )
    
    type = Text(
        title = _(u"Type"),
        description = _(u"""The identifier type, such as “prescription”,or “SSN”. 
                      One day a controlled vocabulary might be possible for this."""),
        required = True
        )
    
